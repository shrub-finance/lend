type User @entity(immutable: true) {
    "address"
    id: ID!
    lendPositions: [LendPosition!]! @derivedFrom(field: "user")
    loans: [Loan!]! @derivedFrom(field: "user")
#    optionPositions: [OptionPosition!]! @derivedFrom(field: "userOption")
}

type LendingPool @entity {
    "poolShareToken address"
    id: ID!
    timestamp: BigInt!
#    poolShareTokenAddress: Bytes!
    txid: Bytes!
    created: Int!
    createdBlock: Int!
    totalUsdc: BigInt!
    totalEthYield: BigInt!
    totalUsdcInterest: BigInt!
    tokenSupply: BigInt!
#    lastSnapshot: BigInt!
}

type BorrowingPool @entity {
    "timestamp"
    id: ID!
    created: Int!
    createdBlock: Int!
    totalCollateralEth: BigInt!
    totalBorrowedUsdc: BigInt!
}

type Loan @entity {
    "ERC-721 tokenId"
    id: ID!
    active: Boolean
    created: Int!
    createdBlock: Int!
    updated: Int!
    updatedBlock: Int!
    closed: Int
    closedBlock: Int
    timestamp: BigInt!
    principal: BigInt!
    originalPrincipal: BigInt!
    paid: BigInt!
    collateral: BigInt!
    collateralReturned: BigInt!
    ltv: BigInt!
    apy: BigInt!
    user: User
    beneficiary: User
}

type LendPosition @entity {
    "user-address"
    id: ID!
    lendingPool: LendingPool
    user: User
    amount: BigInt!
    depositsUsdc: BigInt!
    withdrawsUsdc: BigInt!
}
