type GlobalData @entity {
    id: ID!
    lastSnapshotDate: BigInt!
}

type User @entity(immutable: true) {
    "address"
    id: ID!
    deposits: [Deposit!]! @derivedFrom(field: "user")
    borrows: [Borrow!]! @derivedFrom(field: "user")
#    optionPositions: [OptionPosition!]! @derivedFrom(field: "userOption")
}

type LendingPool @entity {
    "poolShareToken address"
    id: ID!
    timestamp: BigInt!
#    poolShareTokenAddress: Bytes!
    txid: Bytes!
    created: Int!
    createdBlock: Int!
    finalized: Boolean!
    totalPrincipal: BigInt!
    totalEthYield: BigInt!
    totalUsdcInterest: BigInt!
    finalPrincipal: BigInt
    finalUsdcInterest: BigInt
    finalEthYield: BigInt
    tokenSupply: BigInt!
#    lastSnapshot: BigInt!
}

type BorrowingPool @entity {
    "timestamp"
    id: ID!
    created: Int!
    createdBlock: Int!
    totalCollateralEth: BigInt!
    totalBorrowedUsdc: BigInt!
}

type Borrow @entity {
    "ERC-721 tokenId"
    id: ID!
    active: Boolean
    created: Int!
    createdBlock: Int!
    updated: Int!
    updatedBlock: Int!
    closed: Int
    closedBlock: Int
    timestamp: BigInt!
    principal: BigInt!
    originalPrincipal: BigInt!
    paid: BigInt!
    collateral: BigInt!
    collateralReturned: BigInt!
    startDate: BigInt!
    ltv: Int!
    apy: Int!
    user: User!
    beneficiary: User
}

type Deposit @entity {
    "user-address"
    id: ID!
    lendingPool: LendingPool
    user: User
    amount: BigInt! # amount of pool share token tied to lending pool
    depositsUsdc: BigInt!
    withdrawsUsdc: BigInt!
    withdrawsEth: BigInt!
}

type UserLog @entity {
    "txid-index"
    id: ID!
    timestamp: BigInt!
    block: BigInt!
    type: String!
    user: User!
    beneficiary: User
    principal: BigInt
    interest: BigInt
    ethYield: BigInt
    collateral: BigInt
    tokenAmount: BigInt
    deposit: Deposit
    borrow: Borrow
}
